# -*- coding: utf-8 -*-
"""Movie Recommender System

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zq3qfc3wIfjeUzvuFUoiMyC5Gc3MaE8S
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sn
import pickle 

data = pd.read_csv('/content/netflix_titles.csv')
data.head()

data.isnull().sum()

data.dropna(inplace=True)

data.info

data['description'] = data['description']+data['cast']+data['director']+data['listed_in']
new_data=data[['type']+['title']+['description']]
new_data.head()

new_data['type'].value_counts()

#vectorization of all tags present in the description
from sklearn.feature_extraction.text import TfidfVectorizer

tf = TfidfVectorizer()
vector = tf.fit_transform(new_data['description'])
vector

tf.get_feature_names_out()

#cosine distance of each vector from another
from sklearn.metrics.pairwise import cosine_similarity

cs = cosine_similarity(vector, vector)
len(cs)

# new_data[new_data['title']=='War'].index  #outdated values

#recommender function
def recom(title):
  m_index = pd.Index(new_data['title']).get_loc(title)
  distances = cs[m_index]
  enum = list(enumerate(distances))
  sorted_list = sorted(enum,reverse=True,key=lambda x:x[1])

  #get top 10
  top10 = sorted_list[1:11]
  req_idx = [i[0] for i in top10]
  return new_data[['title','description']].iloc[req_idx]

# recom('Jeans')


# pickle.dump(cs, open('movie_recommender_system.pkl', 'wb'))